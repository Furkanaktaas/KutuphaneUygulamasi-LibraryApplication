/*
CREATE TABLE KULLANICI(
KULLANICIID NUMBER NOT NULL PRIMARY KEY,
AD VARCHAR2(20)  NOT NULL ,
SOYAD VARCHAR2(20)   NOT NULL ,
EPOSTA VARCHAR2(20), 
ADRES VARCHAR2(100),
SIFRE VARCHAR(20),
TELEFON NUMBER(11),
YETKIID NUMBER,
CONSTRAINT CK_KUL_AD CHECK (REGEXP_LIKE(AD,'^[[:alpha:]]+$')),
CONSTRAINT CK_KUL_SOYAD CHECK (REGEXP_LIKE(SOYAD,'^[[:alpha:]]+$')),
CONSTRAINT CK_EPOSTA CHECK (REGEXP_LIKE(EPOSTA,'[[:alnum:]]+@[[:alnum:]]+\.[[:alnum:]]')),
CONSTRAINT CK_KULL_YETKI_FK FOREIGN KEY (YETKIID)  REFERENCES YETKI (YETKIID));

CREATE SEQUENCE KUL_ID_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER KUL_ID_TRG 
BEFORE INSERT ON KULLANICI 
FOR EACH ROW
BEGIN
  SELECT KUL_ID_SEQ.NEXTVAL INTO:NEW.KULLANICIID FROM dual;
END;

INSERT INTO KULLANICI VALUES(KULL_ID_SEQ.nextval,'A','A','yasin@.COM','A',1,1)
   
---------------------- KULLANICI TABLE END ----------------------------*/

/*
CREATE TABLE OGRENCI(
OGRENCIID NUMBER NOT NULL PRIMARY KEY,
OKULAD VARCHAR2(30) NOT NULL,
OKULNO NUMBER(9) NOT NULL,
BOLUMAD VARCHAR2(50)NOT NULL,
DONEMNO NUMBER(2),
KULLANICIID NUMBER, 
CONSTRAINT CK_OGR_OKULAD CHECK (REGEXP_LIKE(OKULAD,'^[[:alpha:]]+$')),
CONSTRAINT CK_OGR_BOLUMAD CHECK (REGEXP_LIKE(BOLUMAD,'^[[:alpha:]]+$')),
CONSTRAINT CK_OGR_KUL_FK FOREIGN KEY (KULLANICIID)  REFERENCES KULLANICI (KULLANICIID)
);

CREATE SEQUENCE OGR_ID_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER OGR_ID_TRG 
BEFORE INSERT ON OGRENCI 
FOR EACH ROW
BEGIN
  SELECT OGR_ID_SEQ.NEXTVAL INTO:NEW.OGRENCIID FROM dual;
END;

-----------------------OGRENCI TABLE END----------------------------*/

/*
CREATE TABLE ODUNC(
ODUNCID NUMBER NOT NULL PRIMARY KEY ,
VERILISTARIHI DATE,
DONUS_TARIHI DATE,
KULLANICIID NUMBER, 
KITAPID NUMBER,
CONSTRAINT CK_ODUNC_KUL_FK FOREIGN KEY (KULLANICIID)  REFERENCES KULLANICI (KULLANICIID),
CONSTRAINT CK_ODUNC_KITAP_FK FOREIGN KEY (KITAPID)  REFERENCES KITAP (KITAPID)
);

CREATE SEQUENCE ODUNC_ID_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER ODUNC_ID_TRG 
BEFORE INSERT ON ODUNC 
FOR EACH ROW
BEGIN
  SELECT ODUNC_ID_SEQ.NEXTVAL INTO:NEW.ODUNCID FROM dual;
END;
 
-----------------------ODUNC TABLE END------------------------------*/

/*
CREATE TABLE YETKI(
YETKIID NUMBER NOT NULL PRIMARY KEY ,
AD VARCHAR2(20) NOT NULL CONSTRAINT CK_YETKI_AD CHECK (AD IN ('OGRENCI','PERSONEL','ADMIN'))
);

CREATE SEQUENCE YETKI_ID_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER YETKI_ID_TRG 
BEFORE INSERT ON YETKI 
FOR EACH ROW
BEGIN
  SELECT YETKI_ID_SEQ.NEXTVAL INTO:NEW.YETKIID FROM dual;
END;

-------------------------YETKI TABLE END----------------------------*/

/*
CREATE TABLE DURUM(
DURUMID NUMBER NOT NULL PRIMARY KEY,
AD VARCHAR2(50),
CONSTRAINT CK_DURUM_AD CHECK (REGEXP_LIKE(AD,'^[[:alpha:]]+$'))
);

CREATE SEQUENCE DURUM_ID_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER DURUM_ID_TRG 
BEFORE INSERT ON DURUM 
FOR EACH ROW
BEGIN
  SELECT DURUM_ID_SEQ.NEXTVAL INTO:NEW.DURUMID FROM dual;
END;


---------------------DURUM TABLE END--------------------------------*/

/*
CREATE TABLE KITAP(
KITAPID NUMBER NOT NULL PRIMARY KEY,
AD VARCHAR2(50),
YAZAR VARCHAR2(50),
SAYFA_SAYISI NUMBER(4),
YAYIN_EVI VARCHAR2(60),
TUR VARCHAR2(20),
DURUMID NUMBER,
CONSTRAINT CK_KITAP_AD CHECK (REGEXP_LIKE(AD,'^[[:alpha:]]+$')),
CONSTRAINT CK_KITAP_YAZAR CHECK (REGEXP_LIKE(YAZAR,'^[[:alpha:]]+$')),
CONSTRAINT CK_KITAP_TUR CHECK (REGEXP_LIKE(TUR,'^[[:alpha:]]+$')),
CONSTRAINT CK_KITAP_DURUM_FK FOREIGN KEY (DURUMID) REFERENCES DURUM (DURUMID)
);

CREATE SEQUENCE KITAP_ID_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER KITAP_ID_TRG 
BEFORE INSERT ON KITAP 
FOR EACH ROW
BEGIN
  SELECT KITAP_ID_SEQ.NEXTVAL INTO:NEW.KITAPID FROM dual;
END;

---------------------KITAP TABLE END--------------------------------*/
     
---------------------------------------------------------------------
   /*procedurler*/
-----------------------------------------------------------------
   /*
create or replace PROCEDURE SILINMIS_GETIR_PROC(SIL_GETIR_CURSOR OUT SYS_REFCURSOR)
 IS 
 BEGIN 
    OPEN SIL_GETIR_CURSOR FOR
        SELECT * FROM SILINMIS_ODUNC S INNER JOIN KULLANICI KUL ON S.S_KULID=KUL.KULLANICIID INNER JOIN KITAP K ON S.S_KITAPID=K.KITAPID; 
 END;
 
 create or replace PROCEDURE KULLANICI_CEK_EPOSTA_PROC (P_EPOSTA VARCHAR2,KUL_CEK_EPOSTA_CURSOR OUT SYS_REFCURSOR) IS
BEGIN
    OPEN KUL_CEK_EPOSTA_CURSOR FOR 
        SELECT * FROM KULLANICI K INNER JOIN YETKI Y ON K.YETKIID = Y.YETKIID WHERE K.EPOSTA = P_EPOSTA;
END;


create or replace PROCEDURE KULLANICI_CEK_AD_SOYAD_PROC (P_AD VARCHAR2,P_SOYAD VARCHAR2,KUL_AD_SOYAD_CURSOR OUT SYS_REFCURSOR) IS
BEGIN
    IF P_SOYAD='BOS'
    THEN
    OPEN KUL_AD_SOYAD_CURSOR FOR 
        SELECT * FROM KULLANICI K INNER JOIN YETKI Y ON K.YETKIID=Y.YETKIID WHERE K.AD=P_AD ;
    ELSE
     OPEN KUL_AD_SOYAD_CURSOR FOR 
        SELECT * FROM KULLANICI K INNER JOIN YETKI Y ON K.YETKIID=Y.YETKIID WHERE K.AD=P_AD AND K.SOYAD=P_SOYAD;
    END IF;
END;

create or replace PROCEDURE KUL_INS_PROC
(P_AD VARCHAR2,P_SOYAD VARCHAR2, P_EPOSTA VARCHAR2,
P_ADRES VARCHAR2, P_SIFRE VARCHAR2,P_TELEFON NUMBER,
P_YETKIID NUMBER,P_OKULAD VARCHAR2 DEFAULT NULL,P_OKULNO NUMBER DEFAULT NULL,
P_BOLUMAD VARCHAR2 DEFAULT NULL,P_DONEMNO NUMBER DEFAULT NULL) IS 
BEGIN
    IF P_YETKIID=3 THEN
    INSERT INTO KULLANICI (AD,SOYAD,EPOSTA,ADRES,SIFRE,TELEFON,YETKIID) VALUES (P_AD,P_SOYAD,P_EPOSTA,P_ADRES,P_SIFRE,P_TELEFON,P_YETKIID);
    INSERT INTO OGRENCI (OKULAD,OKULNO,BOLUMAD,DONEMNO,KULLANICIID) VALUES (P_OKULAD,P_OKULNO,P_BOLUMAD,P_DONEMNO,KUL_ID_SEQ.CURRVAL);
    ELSE
    INSERT INTO KULLANICI (AD,SOYAD,EPOSTA,ADRES,SIFRE,TELEFON,YETKIID) VALUES (P_AD,P_SOYAD,P_EPOSTA,P_ADRES,P_SIFRE,P_TELEFON,P_YETKIID);
    END IF;
END;


create or replace PROCEDURE KITAP_GETIR_KITAPAD_PROC
(P_AD IN VARCHAR2,KITAP_GETIR_KITAPAD_CURSOR OUT SYS_REFCURSOR) IS
BEGIN
    OPEN KITAP_GETIR_KITAPAD_CURSOR FOR
        SELECT * FROM KITAP K INNER JOIN DURUM D ON K.DURUMID=D.DURUMID WHERE K.AD=P_AD;
END; 


create or replace TRIGGER SILINMIS_KITAP_TRG
AFTER DELETE ON ODUNC
 FOR EACH ROW
 BEGIN
    INSERT INTO SILINMIS_ODUNC (S_ODUNCID,S_VERILIS_TAR,S_DONUS_TAR,S_KULID,S_KITAPID)
    VALUES (:OLD.ODUNCID,:OLD.VERILISTARIHI,:OLD.DONUS_TARIHI,:OLD.KULLANICIID,:OLD.KITAPID);
 END;

*/